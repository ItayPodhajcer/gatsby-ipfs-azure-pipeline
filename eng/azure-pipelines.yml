trigger:
- master

stages:
- stage: build
  jobs:
  - job: build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        npm install
      displayName: 'npm install'
    - script: |
        npx gatsby build
      displayName: 'gatsby build'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/public/'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/website-$(Build.BuildId).zip'
      displayName: 'archive website'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/website-$(Build.BuildId).zip'
        ArtifactName: 'website-drop-$(Build.BuildId)'
      displayName: 'publish website artifact'

- stage: 'deploy'
  dependsOn: 'build'
  condition: succeeded('build')
  variables:
    IpfsRootUrl: '<IPFS NODE URL>' # Such as: http://ipfs-example.eastus2.azurecontainer.io:5001
  jobs:
    - deployment: 'deploy'
      pool:
        vmImage: 'ubuntu-latest'
      environment: 'website-$(Build.SourceBranchName)'
      strategy:
        runOnce:
          deploy: 
            steps:
            - task: ExtractFiles@1
              inputs:
                archiveFilePatterns: '$(Pipeline.Workspace)/website-drop-$(Build.BuildId)/*.zip'
                destinationFolder: '$(System.DefaultWorkingDirectory)/website/'
              displayName: 'extract website'
            - script: |
                sudo npm install -g ipfs-add-folder --ignore-scripts
              displayName: 'install ipfs-add-folder'
            - script: |
                ipfs-add-folder "$(System.DefaultWorkingDirectory)/website/" "$(IpfsRootUrl)"
              displayName: 'upload website'
